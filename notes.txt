
Git and Github

"git bash" -> name for the terminal in Windows
git -> language for version control
bash -> flavor of operating system called Linux
Github -> storage space online

Problem: we want to store our code.
Specifically, we want to store different versions of our code.
    If we upload new code that's broken, we want to be able
    to revert to an older version of code ASAP.

Keep track of two separate versions of our code to start.
    Local version, on our machine.
    External version, located in Github.

When we make changes on the LOCAL version, we need to send them
to the EXTERNAL version when we're ready. 

git init 
    (initialize a local repository)
git status
    (lets me know what branch I'm on and what changes are
    committed or uncommitted)
git add . (add all the changes!)
git add filename.txt
    (lists the specific changes to store in the repository)
git commit -m "some commit message"
    (sealing the list of changes to be stored)
git push 
    (sends the changes to the EXTERNAL repository)
git push --set-upstream origin master
    (whenever I push to the origin, push those changes
    to the branch called master)

git remote add <name> <url>
    (establishes a link to an EXTERNAL repository by url
    and calls that link some name)

-----
the code already exists on Github, and we want 
to make a copy of it for ourselves locally
External Repository -> Local Repository

git pull
    (there are External changes and we want to update
    our local copy)

git clone <url>
    (make a local copy of an external repository)


THIS LINE ONLY EXISTS IN THE SECOND COPY YOU MADE